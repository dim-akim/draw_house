Описание версий (этапов создания) бота для Telegram:

    step_1
        + echo_bot:
            Разработку ведем функционально. Принцип - программирование СВЕРХУ ВНИЗ
            Надо получить TOKEN
            + main():
                создаем updater - объект для ловли обновлений телеграм (НУЖЕН ИМПОРТ)
                в отдельную переменную выводим dispatcher - он обычно сидит в updater'е

            Теперь нам нужна функция, которая обработает какое-нибудь сообщение, ее надо создать
            + do_echo(update, context):
                функция-обработчик всегда принимает на вход update (обновление) и context (контекст диалога)
                необходимо взять сообщение из обновления - update.message
                из сообщения берем данные пользователя - update.message.from_user
                поздороваемся с пользователем по имени - update.message.from_user.first_name
                теперь возьмем текст и сделаем его эхо - update.message.text
                нужно написать ответ - update.message.reply_text(text=)

            Теперь надо добавить функцию в обработчик, а обработчик - в диспетчер
            main():
                + обработчик для всех сообщений - some_handler = MessageHandler(Filters.all, do_echo)
                + добавить обработчик в диспетчер - dispatcher.add_handler(some_handler)
                запускаем Главный цикл - постоянный отлов событий
                + updater.start_polling()
                + updater.idle()


    step_1.1
        Пусть бот показывает chat_id - это уникальный набор цифр для каждого чата,
        по нему может происходить идентификация
        do_echo():
            id чата берем из сообщения - update.message.chat_id
            добавляем его в текст ответа

    step_1.2
        Чтобы PyCharm подсказывал, какие методы можно использовать, надо добавить аннотацию типов.
        Update импортируется из пакета telegram, CallbackContext - из пакета telegram.ext
        + do_echo(update: Update, context: CallbackContext):


    step_2


    step_3

